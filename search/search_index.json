{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Research Data Management in FOR5596","text":"<p> Within FOR5596 state-of-the-art research data management is developed and implemented for all research projects. The underlying goal is to create highly annotated, structured data sets that are in line with FAIR principles. This includes the use of standardized data models as well as the development of new data standards. Ultimately, this leads to high-quality data assets that are re-analyzable and reusable for future research projects.</p>"},{"location":"installations/docker/","title":"Docker","text":"<p>Docker is a way to run software in a container. This means that the software is isolated from the rest of your system. This is useful because it means that you can run software without having to install it on your system. This is particularly useful for running software that has a lot of dependencies or that you only need to run occasionally. In this way, Docker is a bit like a virtual machine and enables running software without configuring the system to run it.</p> <p>To install Docker, follow the instructions for your operating system on the Docker website.</p>"},{"location":"installations/jupyternotebook/","title":"Local Jupyter Notebook","text":"<p>Jupyter Notebook is a web-based interactive computing environment that allows you to create and share documents that contain live code, equations, visualizations, and narrative text. It is a great tool for data analysis and visualization. In this Jupyter Notebook environment, sdRDM is already installed, allowing the usage of RDM.</p> <ol> <li> <p>Install Docker</p> </li> <li> <p>Run the FOR5596 Jupyter Lab Docker container from a command line</p> <pre><code>docker run -it --rm -p 8888:8888 -v \"${PWD}\":/home/jovyan/work --name FOR5596-notebook haeussma/for5596-notebook\n</code></pre> </li> <li> <p>Open the Docker Desktop application navigate to <code>Containers</code> and click on the running container named <code>FOR5596-notebook</code></p> </li> <li> <p>within the <code>Logs</code> of the container, you will find a token, which is needed to access the Jupyter Notebook. </p> <pre><code>2024-02-25 17:44:54 [I 2024-02-25 16:44:54.937 ServerApp]     http://127.0.0.1:8888/lab token=a9a39e2f219edac28f66cf2c88a9954978f78626e58e03f6\n2024-02-25 17:44:54 [I 2024-02-25 16:44:54.937 ServerApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\n2024-02-25 17:44:54 [C 2024-02-25 16:44:54.939 ServerApp] \n2024-02-25 17:44:54     \n2024-02-25 17:44:54     To access the server, open this file in a browser:\n2024-02-25 17:44:54         file:///home/jovyan/.local/share/jupyter/runtime/jpserver-7-open.html\n2024-02-25 17:44:54     Or copy and paste one of these URLs:\n2024-02-25 17:44:54         http://e2376db8149d:8888/lab?token=a9a39e2f219edac28f66cf2c88a9954978f78626e58e03f6\n2024-02-25 17:44:54         http://127.0.0.1:8888/lab?token=a9a39e2f219edac28f66cf2c88a9954978f78626e58e03f6\n2024-02-25 17:44:55 [I 2024-02-25 16:44:55.984 ServerApp] Skipped non-installed server(s): bash-language-server, dockerfile-language-server-nodejs, javascript-typescript-langserver, jedi-language-server, julia-language-server, pyright, python-language-server, python-lsp-server, r-languageserver, sql-language-server, texlab, typescript-language-server, unified-language-server, vscode-css-languageserver-bin, vscode-html-languageserver-bin, vscode-json-languageserver-bin, yaml-language-server\n</code></pre> <p>In the example above, the token is <code>a9a39e2f219edac28f66cf2c88a9954978f78626e58e03f6</code>.</p> </li> <li> <p>Click on the link <code>8888:8888</code> in the header of the container to open the Jupyter Notebook in your default web browser.</p> <p></p> </li> <li> <p>Enter the token from the logs in the field <code>Token</code> and click on <code>Log in</code>.</p> </li> <li> <p>You are now in the Jupyter Notebook environment your local files can be accessed via the <code>work</code> folder.</p> </li> </ol>"},{"location":"installations/local_env/","title":"Setup Local Programming Environment","text":"<p>\ud83d\udea7 Under Construction \ud83d\udea7</p> <p>This page is currently under construction. Please check back later for updates.</p>"},{"location":"installations/local_env/#anaconda","title":"Anaconda","text":"<p>Anaconda is a distribution of the Python and R programming languages for scientific computing, that aims to simplify package management and deployment. The distribution includes data science packages suitable for Windows, Linux, and macOS.</p>"},{"location":"installations/local_env/#github-desktop","title":"GitHub Desktop","text":"<p>GitHub Desktop is a graphical user interface for GitHub, which allows you to manage your repositories, review pull requests, and more.</p>"},{"location":"installations/local_env/#vs-code","title":"VS Code","text":"<p>Visual Studio Code is a source-code editor developed for Windows, Linux, and macOS. It includes support for debugging, embedded Git control, syntax highlighting, intelligent code completion, snippets, and code refactoring.</p>"},{"location":"rdm/define/","title":"Define a RDM","text":"Background on structured data <p>Defining the structure of data is the prerequisite for structured data. This is traditionally done by writing a schema in JSON or XML, which defines a format. Additionally, software has to be written to enable the validation of data against this schema. This process is cumbersome since the format and the software have to be developed separately and the schema is not human-readable. Yet the biggest issue is that the data model and corresponding software need to be developed by a software engineer and not by the domain expert of the data.</p> <p>The sdRDM framework caters to this issue by providing a human-readable way to define the structure of data. The structure of data is defined as a hierarchical list, using Markdown formatting(1). The following example shows how a data model for a <code>Calibration</code> experiment is defined in unrendered Markdown, JSON, and XML.</p> <ol> <li>Markdown syntax is designed to be quick to learn and easy to read. The basic elements include headers, lists, emphasis (bold and italic text), links, and code blocks. These elements are marked by simple punctuation characters, which act as indicators of how text should be formatted. The following list shows the most common elements of Markdown and their corresponding syntax:<ul> <li> </li> <li> </li> <li> </li> <li> <ul> <li>List item: <code>* List item</code></li> </ul> </li> <li>italic: <code>*italic*</code></li> <li>bold: <code>__bold__</code> </li> </ul> </li> </ol> Example MarkdownJSONXML <pre><code># Data structure of a calibration experiment\nThis data model describes the structure of a calibration experiment for an analyte. The calibration experiment consists of a list of samples that were measured. Each sample contains the initial concentration and the measured signal. The calibration experiment also contains information on the measurement conditions such as the temperature and pH at which the calibration experiment was performed.\n\n## Objects\n\n### Calibration\nA `Calibration` contains information on the measurement conditions and the actual measurements of the calibration experiment for an analyte.\n\n- analyte_name\n    - type: string\n    - description: Name of the analyte that was calibrated\n- __inchi__\n    - type: string\n    - description: InChI of the analyte that was calibrated\n- __date_measured__\n    - type: datetime\n    - description: Timestamp of when the calibration experiment was performed\n- __temperature__\n    - type: float\n    - description: Temperature at which the calibration experiment was performed\n- __ph__\n    - type: float\n    - description: pH at which the calibration experiment was performed\n- __samples__\n    - type: Sample[]\n    - description: List of samples that were used for the calibration experiment\n\n### Sample\nA `Sample` contains describes individual measurements of a `Calibration`. \n\n- __init_conc__\n    - type: float\n    - description: Initial concentration of the sample\n- __conc_unit__\n    - type: string\n    - description: Unit of the concentration\n- __measured_signal__\n    - type: float\n    - description: Signal that was measured for the sample\n- signal_unit\n    - type: string\n    - description: Unit of the signal\n</code></pre> <pre><code>{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Calibration Experiment\",\n    \"description\": \"This data model describes the structure of a calibration experiment for an analyte.\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"analyte_name\": {\n        \"type\": \"string\",\n        \"description\": \"Name of the analyte that was calibrated\"\n        },\n        \"inchi\": {\n        \"type\": \"string\",\n        \"description\": \"InChI of the analyte that was calibrated\"\n        },\n        \"date_measured\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\",\n        \"description\": \"Timestamp of when the calibration experiment was performed\"\n        },\n        \"temperature\": {\n        \"type\": \"number\",\n        \"description\": \"Temperature at which the calibration experiment was performed\"\n        },\n        \"ph\": {\n        \"type\": \"number\",\n        \"description\": \"pH at which the calibration experiment was performed\"\n        },\n        \"samples\": {\n        \"type\": \"array\",\n        \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n            \"init_conc\": {\n                \"type\": \"number\",\n                \"description\": \"Initial concentration of the sample\"\n            },\n            \"conc_unit\": {\n                \"type\": \"string\",\n                \"description\": \"Unit of the concentration\"\n            },\n            \"measured_signal\": {\n                \"type\": \"number\",\n                \"description\": \"Signal that was measured for the sample\"\n            },\n            \"signal_unit\": {\n                \"type\": \"string\",\n                \"description\": \"Unit of the signal\"\n            }\n            },\n            \"required\": [\"init_conc\", \"conc_unit\", \"measured_signal\"]\n        },\n        \"description\": \"List of samples that were used for the calibration experiment\"\n        }\n    },\n    \"required\": [\"inchi\", \"date_measured\", \"temperature\", \"ph\", \"samples\"]\n}\n</code></pre> <pre><code>&lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;\n&lt;xs:element name=\"CalibrationExperiment\"&gt;\n    &lt;xs:complexType&gt;\n    &lt;xs:sequence&gt;\n        &lt;xs:element name=\"Calibration\" minOccurs=\"1\" maxOccurs=\"1\"&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n            &lt;xs:element name=\"analyte_name\" type=\"xs:string\"/&gt;\n            &lt;xs:element name=\"inchi\" type=\"xs:string\"/&gt;\n            &lt;xs:element name=\"date_measured\" type=\"xs:dateTime\"/&gt;\n            &lt;xs:element name=\"temperature\" type=\"xs:float\"/&gt;\n            &lt;xs:element name=\"ph\" type=\"xs:float\"/&gt;\n            &lt;xs:element name=\"samples\" minOccurs=\"1\" maxOccurs=\"unbounded\"&gt;\n                &lt;xs:complexType&gt;\n                &lt;xs:sequence&gt;\n                    &lt;xs:element name=\"Sample\" minOccurs=\"1\" maxOccurs=\"unbounded\"&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                        &lt;xs:element name=\"init_conc\" type=\"xs:float\"/&gt;\n                        &lt;xs:element name=\"conc_unit\" type=\"xs:string\"/&gt;\n                        &lt;xs:element name=\"measured_signal\" type=\"xs:float\"/&gt;\n                        &lt;xs:element name=\"signal_unit\" type=\"xs:string\"/&gt;\n                        &lt;/xs:sequence&gt;\n                    &lt;/xs:complexType&gt;\n                    &lt;/xs:element&gt;\n                &lt;/xs:sequence&gt;\n                &lt;/xs:complexType&gt;\n            &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n        &lt;/xs:element&gt;\n    &lt;/xs:sequence&gt;\n    &lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre> <p>However, Markdown is natively rendered in most text editors, allowing compelling text visualization. Furthermore, a visualization of the data model is generated by the sdRDM framework.</p> Example Markdown (rendered)Data model visualization <p></p>"},{"location":"rdm/define/#header-1-header-1","title":"Header 1: <code># Header 1</code>","text":""},{"location":"rdm/define/#header-2-header-2","title":"Header 2: <code>## Header 2</code>","text":""},{"location":"rdm/define/#header-3-header-3","title":"Header 3: <code>### Header 3</code>","text":""},{"location":"rdm/define/#data-structure-of-a-calibration-experiment","title":"Data structure of a calibration experiment","text":"<p>This data model describes the structure of a calibration experiment for an analyte. The calibration experiment consists of a list of samples that were measured. Each sample contains the initial concentration and the measured signal. The calibration experiment also contains information on the measurement conditions such as the temperature and pH at which the calibration experiment was performed.</p>"},{"location":"rdm/define/#objects","title":"Objects","text":""},{"location":"rdm/define/#calibration","title":"Calibration","text":"<p>A <code>Calibration</code> contains information on the measurement conditions and the actual measurements of the calibration experiment for an analyte.</p> <ul> <li>analyte_name<ul> <li>type: string</li> <li>description: Name of the analyte that was calibrated</li> </ul> </li> <li>inchi<ul> <li>type: string</li> <li>description: InChI of the analyte that was calibrated</li> </ul> </li> <li>date_measured<ul> <li>type: datetime</li> <li>description: Timestamp of when the calibration experiment was performed</li> </ul> </li> <li>temperature<ul> <li>type: float</li> <li>description: Temperature at which the calibration experiment was performed</li> </ul> </li> <li>ph<ul> <li>type: float</li> <li>description: pH at which the calibration experiment was performed</li> </ul> </li> <li>samples<ul> <li>type: Sample[]</li> <li>description: List of samples that were used for the calibration experiment</li> </ul> </li> </ul>"},{"location":"rdm/define/#sample","title":"Sample","text":"<p>A <code>Sample</code> contains describes individual measurements of a <code>Calibration</code>. </p> <ul> <li>init_conc<ul> <li>type: float</li> <li>description: Initial concentration of the sample</li> </ul> </li> <li>conc_unit<ul> <li>type: string</li> <li>description: Unit of the concentration</li> </ul> </li> <li>measured_signal<ul> <li>type: float</li> <li>description: Signal that was measured for the sample</li> </ul> </li> <li>signal_unit<ul> <li>type: string</li> <li>description: Unit of the signal</li> </ul> </li> </ul>"},{"location":"rdm/define/#write-a-markdown-model","title":"\u270d\ufe0f Write a Markdown Model","text":"<p>The core objective when defining an RDM is to create a hierarchical list of all relevant properties of what the model should represent. The Markdown document can be written in any text editor, or using the RDM Editor web tool.</p>"},{"location":"rdm/define/#document-header","title":"Document Header","text":"<p>A Markdown Model starts with the title of the data mode as a level 1 heading (<code># &lt;title of the data model&gt;</code>), followed by the level 2 heading (<code>## Objects</code>), which is the start of the hierarchical list of objects comprising the data model.</p> <p>Document header</p> <pre><code># Data structure of an experiment\nBelow the heading an explanation of the data model can be given. \nThis can be a short description of the data model or a more detailed explanation of the data model.\n\n## Objects\n</code></pre>"},{"location":"rdm/define/#defining-individual-objects","title":"Defining individual Objects","text":"<ol> <li> <p>Define the name of the object as a level 3 heading <code>### &lt;NameOfTheObject&gt;</code></p> <ul> <li>Ensure that the names are composed solely of alphabetical or numerical characters.</li> <li>Starting an object name with a number is not allowed.</li> <li>It is possible to use underscores while naming objects, but it is not recommended.</li> </ul> </li> <li> <p>Add individual attributes as a list to the object</p> <ul> <li>When naming variables, use only alphabetical or numerical characters.</li> <li>Remember to avoid using special characters or symbols.</li> <li>Underscores are permitted and suggested as a substitute for spaces.</li> </ul> </li> <li> <p>Add a <code>type</code> and <code>description</code> to each attribute</p> <ul> <li>The <code>type</code> option is mandatory for any attribute - e.g. type: string</li> <li>If the attribute is a list, this is denoted with brackets after the type - e.g. <code>type: Sample[]</code></li> <li>The <code>description</code> option should briefly describe what the attribute describes in the context of the data model</li> </ul> </li> </ol> <p>Defining an object with attributes</p> <pre><code>### Experiment\nAn `Experiment` contains information on the measurement conditions and the actual measurements of the experiment.\n\n- analyte_name\n    - type: string\n    - description: Name of the analyte that was measured\n- samples\n    - type: Sample[]\n    - description: List of samples that were measured in this experiment\n</code></pre>"},{"location":"rdm/define/#linking-objects","title":"Linking Objects","text":"<p>When an object contains another object, the object is linked to the parent object by adding the name of the object in the <code>type</code> option of the attribute.</p> <p>Linking objects</p> <pre><code>### Experiment\nAn `Experiment` contains information on the measurement conditions and the actual measurements of the experiment.\n\n- analyte_name\n    - type: string\n    - description: Name of the analyte that was measured\n- samples\n    - type: Sample[]\n    - description: List of samples that were measured in this experiment\n\n### Sample\nA `Sample` contains describes individual measurements of an `Experiment`.\n\n- init_conc\n    - type: float\n    - description: Initial concentration of the sample\n...\n</code></pre>"},{"location":"rdm/define/#special-types","title":"Special Types","text":"<p>Besides the basic data types, such as <code>string</code>, <code>float</code>, <code>int</code>, more specialized data types are available:</p> <code>datetime</code> <p>A date and time in the format <code>YYYY-MM-DDTHH:MM:SS</code></p> <code>Unit</code> <p>Enables, that the entered <code>Unit</code> is checked against a list of predefined units. In this way \\(\\frac{mmol}{L}\\) can conveniently be expressed as <code>\"mmol/l\"</code> when the data model is used. </p> <code>Quantity</code> <p>A <code>Quantity</code> is a combination of an <code>int</code> or <code>float</code> and a <code>Unit</code>. This is useful for measurements, where the unit is important. This enables the seamless conversion of quantities in any other unit when the data model is used.</p> <code>Equation</code> <p>An <code>Equation</code> is a mathematical equation that can be used to calculate a value. This type enables compatibility with <code>MathML</code> when the data model is used</p>"}]}